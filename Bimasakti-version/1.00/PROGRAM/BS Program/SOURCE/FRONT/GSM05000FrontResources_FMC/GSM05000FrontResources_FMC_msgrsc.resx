<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LABEL_TRANSACTION" xml:space="preserve">
    <value>Transaction</value>
  </data>
  <data name="LABEL_TRANSCODE" xml:space="preserve">
    <value>Transaction Code</value>
  </data>
  <data name="LABEL_INCREMENTFLAG" xml:space="preserve">
    <value>Using Incremental Document</value>
  </data>
  <data name="LABEL_SEPARATOR" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="LABEL_SEQUENCE" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="LABEL_DEPTMODE" xml:space="preserve">
    <value>By Department</value>
  </data>
  <data name="LABEL_TRANSACTIONMODE" xml:space="preserve">
    <value>Show Transaction Code</value>
  </data>
  <data name="LABEL_PERIODMODE" xml:space="preserve">
    <value>Period Mode</value>
  </data>
  <data name="LABEL_YEARFORMAT" xml:space="preserve">
    <value>Year Format</value>
  </data>
  <data name="LABEL_NUMBERLENGTH" xml:space="preserve">
    <value>Length of Number</value>
  </data>
  <data name="LABEL_PREFIX" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="LABEL_SUFIX" xml:space="preserve">
    <value>Suffix</value>
  </data>
  <data name="LABEL_SAMPLE" xml:space="preserve">
    <value>Sample</value>
  </data>
  <data name="LABEL_APPROVALFLAG" xml:space="preserve">
    <value>Using Approval</value>
  </data>
  <data name="LABEL_USERTHIRDPARTY" xml:space="preserve">
    <value>Use 3rd Party</value>
  </data>
  <data name="LABEL_APPROVALMODE" xml:space="preserve">
    <value>Approval Mode</value>
  </data>
  <data name="LABEL_APPROVALDEPT" xml:space="preserve">
    <value>By Department</value>
  </data>
  <data name="LABEL_UPDATEDBY" xml:space="preserve">
    <value>Updated By</value>
  </data>
  <data name="LABEL_UPDATEDDATE" xml:space="preserve">
    <value>Updated Date</value>
  </data>
  <data name="LABEL_CREATEDBY" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="LABEL_CREATEDDATE" xml:space="preserve">
    <value>Created Date</value>
  </data>
  <data name="LABEL_PERIOD" xml:space="preserve">
    <value>Period</value>
  </data>
  <data name="LABEL_DEPTCODE" xml:space="preserve">
    <value>Department Code</value>
  </data>
  <data name="LABEL_DEPTNAME" xml:space="preserve">
    <value>Department Name</value>
  </data>
  <data name="LABEL_STARTNUMBER" xml:space="preserve">
    <value>Starting No.</value>
  </data>
  <data name="LABEL_LASTNUMBER" xml:space="preserve">
    <value>Last No.</value>
  </data>
  <data name="LABEL_DATE" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="LABEL_DEPARTMENT" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="LABEL_USERID" xml:space="preserve">
    <value>User Id</value>
  </data>
  <data name="LABEL_USERNAME" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="LABEL_REPLACEMENT" xml:space="preserve">
    <value>Replacement</value>
  </data>
  <data name="LABEL_POSITION" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="LABEL_LIMITAMOUNT" xml:space="preserve">
    <value>Limit Amount</value>
  </data>
  <data name="LABEL_MINLIMITAMOUNTLOCAL" xml:space="preserve">
    <value>*Min Limit Amount in Local Currencty</value>
  </data>
  <data name="LABEL_COPYTO" xml:space="preserve">
    <value>Copy To</value>
  </data>
  <data name="LABEL_COPYFROM" xml:space="preserve">
    <value>Copy From</value>
  </data>
  <data name="LABEL_CHANGESEQ" xml:space="preserve">
    <value>Change User Sequence</value>
  </data>
  <data name="LABEL_VALIDTO" xml:space="preserve">
    <value>Valid To</value>
  </data>
  <data name="LABEL_VALIDFROM" xml:space="preserve">
    <value>Valid From</value>
  </data>
  <data name="BTN_PROCESS" xml:space="preserve">
    <value>Process</value>
  </data>
  <data name="BTN_CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="BTN_SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="BTN_MOVENEXT" xml:space="preserve">
    <value>Move Next</value>
  </data>
  <data name="BTN_MOVEPREVIOUS" xml:space="preserve">
    <value>Move Previous</value>
  </data>
  <data name="LABEL_MINLIMITAMOUNT" xml:space="preserve">
    <value>Min Limit Amount</value>
  </data>
  <data name="Err01" xml:space="preserve">
    <value>You must fill Approval Mode</value>
  </data>
  <data name="Confirm01" xml:space="preserve">
    <value>There is some detail in Detail Document Numbering table. Your data changing will delete all Detail Document Numbering table.</value>
  </data>
  <data name="ConfirmLabel" xml:space="preserve">
    <value>Confirmation</value>
  </data>
  <data name="Confirm02" xml:space="preserve">
    <value>There is some detail in User Approval table. Your data changing will delete all User Approval table.</value>
  </data>
  <data name="Err02" xml:space="preserve">
    <value>You should fill Sequence By Department</value>
  </data>
  <data name="Err03" xml:space="preserve">
    <value>You should fill Sequence By Transaction Code</value>
  </data>
  <data name="Err04" xml:space="preserve">
    <value>You should fill Sequence Period Mode</value>
  </data>
  <data name="Err05" xml:space="preserve">
    <value>You should fill Sequence Length of Number</value>
  </data>
  <data name="Err06" xml:space="preserve">
    <value>Sequence value can not same each other</value>
  </data>
  <data name="Err07" xml:space="preserve">
    <value>Sequence can not overlap or else must Sequential from 1 to {0}</value>
  </data>
  <data name="LABEL_MAX30" xml:space="preserve">
    <value>Maximum 30</value>
  </data>
  <data name="Err08" xml:space="preserve">
    <value>Reference Number length cannot exceed 30 characters</value>
  </data>
  <data name="Confirm03" xml:space="preserve">
    <value>Change Replacement flag to false will remove all replacement for this user, are you sure?</value>
  </data>
  <data name="LABEL_GROUPUSERAPPROVAL" xml:space="preserve">
    <value>User Approval</value>
  </data>
  <data name="LABEL_GROUPREPLUSER" xml:space="preserve">
    <value>Replacement User</value>
  </data>
</root>